/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  DatepickerWeek as DatepickerWeek
} from './components/zap-datepicker/datepicker-week/datepicker-week';

declare global {
  interface HTMLDatepickerWeekElement extends DatepickerWeek, HTMLElement {
  }
  var HTMLDatepickerWeekElement: {
    prototype: HTMLDatepickerWeekElement;
    new (): HTMLDatepickerWeekElement;
  };
  interface HTMLElementTagNameMap {
    "datepicker-week": HTMLDatepickerWeekElement;
  }
  interface ElementTagNameMap {
    "datepicker-week": HTMLDatepickerWeekElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "datepicker-week": JSXElements.DatepickerWeekAttributes;
    }
  }
  namespace JSXElements {
    export interface DatepickerWeekAttributes extends HTMLAttributes {
      mobile?: boolean;
    }
  }
}


import {
  MonthHeader as MonthHeader
} from './components/zap-datepicker/month-header/month-header';

declare global {
  interface HTMLMonthHeaderElement extends MonthHeader, HTMLElement {
  }
  var HTMLMonthHeaderElement: {
    prototype: HTMLMonthHeaderElement;
    new (): HTMLMonthHeaderElement;
  };
  interface HTMLElementTagNameMap {
    "month-header": HTMLMonthHeaderElement;
  }
  interface ElementTagNameMap {
    "month-header": HTMLMonthHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "month-header": JSXElements.MonthHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface MonthHeaderAttributes extends HTMLAttributes {
      mobile?: boolean;
      month?: number;
      secondMonthHeader?: boolean;
      year?: number;
    }
  }
}


import {
  WeekHeader as WeekHeader
} from './components/zap-datepicker/week-header/week-header';

declare global {
  interface HTMLWeekHeaderElement extends WeekHeader, HTMLElement {
  }
  var HTMLWeekHeaderElement: {
    prototype: HTMLWeekHeaderElement;
    new (): HTMLWeekHeaderElement;
  };
  interface HTMLElementTagNameMap {
    "week-header": HTMLWeekHeaderElement;
  }
  interface ElementTagNameMap {
    "week-header": HTMLWeekHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "week-header": JSXElements.WeekHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface WeekHeaderAttributes extends HTMLAttributes {
      date?: any;
      dateRestrictionObj?: any;
      datesObj?: any;
      day?: number;
      daysInMonth?: number;
      lastDay?: number;
      lastDayOfMonth?: any;
      month?: number;
      multidate?: boolean;
      offset?: number;
      selectedDate?: any;
      todaysDate?: string;
      year?: number;
    }
  }
}


import {
  ZapDatepicker as ZapDatepicker
} from './components/zap-datepicker/zap-datepicker';

declare global {
  interface HTMLZapDatepickerElement extends ZapDatepicker, HTMLElement {
  }
  var HTMLZapDatepickerElement: {
    prototype: HTMLZapDatepickerElement;
    new (): HTMLZapDatepickerElement;
  };
  interface HTMLElementTagNameMap {
    "zap-datepicker": HTMLZapDatepickerElement;
  }
  interface ElementTagNameMap {
    "zap-datepicker": HTMLZapDatepickerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "zap-datepicker": JSXElements.ZapDatepickerAttributes;
    }
  }
  namespace JSXElements {
    export interface ZapDatepickerAttributes extends HTMLAttributes {
      maxDate?: string;
      minDate?: string;
      multiDate?: boolean;
      zapDatepickerId?: any;
    }
  }
}

